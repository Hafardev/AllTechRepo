// Generated by Dagger (https://dagger.dev).
package com.example.data.repository;

import com.example.data.api.UserGitApi;
import com.example.data.db.dao.UserDao;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class UserGitRepositoryImp_Factory implements Factory<UserGitRepositoryImp> {
  private final Provider<UserGitApi> userGitApiProvider;

  private final Provider<UserDao> userDaoProvider;

  public UserGitRepositoryImp_Factory(Provider<UserGitApi> userGitApiProvider,
      Provider<UserDao> userDaoProvider) {
    this.userGitApiProvider = userGitApiProvider;
    this.userDaoProvider = userDaoProvider;
  }

  @Override
  public UserGitRepositoryImp get() {
    return newInstance(userGitApiProvider.get(), userDaoProvider.get());
  }

  public static UserGitRepositoryImp_Factory create(Provider<UserGitApi> userGitApiProvider,
      Provider<UserDao> userDaoProvider) {
    return new UserGitRepositoryImp_Factory(userGitApiProvider, userDaoProvider);
  }

  public static UserGitRepositoryImp newInstance(UserGitApi userGitApi, UserDao userDao) {
    return new UserGitRepositoryImp(userGitApi, userDao);
  }
}
