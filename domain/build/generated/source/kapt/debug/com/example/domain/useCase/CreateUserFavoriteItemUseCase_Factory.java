// Generated by Dagger (https://dagger.dev).
package com.example.domain.useCase;

import com.example.domain.repository.UserGitRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class CreateUserFavoriteItemUseCase_Factory implements Factory<CreateUserFavoriteItemUseCase> {
  private final Provider<UserGitRepository> userGitRepositoryProvider;

  public CreateUserFavoriteItemUseCase_Factory(
      Provider<UserGitRepository> userGitRepositoryProvider) {
    this.userGitRepositoryProvider = userGitRepositoryProvider;
  }

  @Override
  public CreateUserFavoriteItemUseCase get() {
    return newInstance(userGitRepositoryProvider.get());
  }

  public static CreateUserFavoriteItemUseCase_Factory create(
      Provider<UserGitRepository> userGitRepositoryProvider) {
    return new CreateUserFavoriteItemUseCase_Factory(userGitRepositoryProvider);
  }

  public static CreateUserFavoriteItemUseCase newInstance(UserGitRepository userGitRepository) {
    return new CreateUserFavoriteItemUseCase(userGitRepository);
  }
}
