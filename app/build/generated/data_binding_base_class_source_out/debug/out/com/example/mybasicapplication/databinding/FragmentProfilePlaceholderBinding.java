// Generated by view binder compiler. Do not edit!
package com.example.mybasicapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.mybasicapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentProfilePlaceholderBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout constraintLayout;

  @NonNull
  public final AppCompatImageView ivBio;

  @NonNull
  public final AppCompatImageView ivCompany;

  @NonNull
  public final AppCompatImageView ivLocation;

  @NonNull
  public final AppCompatImageView ivName;

  @NonNull
  public final AppCompatImageView ivOwner;

  @NonNull
  public final TextView textBio;

  @NonNull
  public final TextView textCompany;

  @NonNull
  public final TextView textLocation;

  @NonNull
  public final TextView textName;

  @NonNull
  public final TextView textOwner;

  private FragmentProfilePlaceholderBinding(@NonNull LinearLayout rootView,
      @NonNull LinearLayout constraintLayout, @NonNull AppCompatImageView ivBio,
      @NonNull AppCompatImageView ivCompany, @NonNull AppCompatImageView ivLocation,
      @NonNull AppCompatImageView ivName, @NonNull AppCompatImageView ivOwner,
      @NonNull TextView textBio, @NonNull TextView textCompany, @NonNull TextView textLocation,
      @NonNull TextView textName, @NonNull TextView textOwner) {
    this.rootView = rootView;
    this.constraintLayout = constraintLayout;
    this.ivBio = ivBio;
    this.ivCompany = ivCompany;
    this.ivLocation = ivLocation;
    this.ivName = ivName;
    this.ivOwner = ivOwner;
    this.textBio = textBio;
    this.textCompany = textCompany;
    this.textLocation = textLocation;
    this.textName = textName;
    this.textOwner = textOwner;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentProfilePlaceholderBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentProfilePlaceholderBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_profile_placeholder, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentProfilePlaceholderBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      LinearLayout constraintLayout = (LinearLayout) rootView;

      id = R.id.iv_bio;
      AppCompatImageView ivBio = ViewBindings.findChildViewById(rootView, id);
      if (ivBio == null) {
        break missingId;
      }

      id = R.id.iv_company;
      AppCompatImageView ivCompany = ViewBindings.findChildViewById(rootView, id);
      if (ivCompany == null) {
        break missingId;
      }

      id = R.id.iv_location;
      AppCompatImageView ivLocation = ViewBindings.findChildViewById(rootView, id);
      if (ivLocation == null) {
        break missingId;
      }

      id = R.id.iv_name;
      AppCompatImageView ivName = ViewBindings.findChildViewById(rootView, id);
      if (ivName == null) {
        break missingId;
      }

      id = R.id.iv_owner;
      AppCompatImageView ivOwner = ViewBindings.findChildViewById(rootView, id);
      if (ivOwner == null) {
        break missingId;
      }

      id = R.id.text_bio;
      TextView textBio = ViewBindings.findChildViewById(rootView, id);
      if (textBio == null) {
        break missingId;
      }

      id = R.id.text_company;
      TextView textCompany = ViewBindings.findChildViewById(rootView, id);
      if (textCompany == null) {
        break missingId;
      }

      id = R.id.text_location;
      TextView textLocation = ViewBindings.findChildViewById(rootView, id);
      if (textLocation == null) {
        break missingId;
      }

      id = R.id.text_name;
      TextView textName = ViewBindings.findChildViewById(rootView, id);
      if (textName == null) {
        break missingId;
      }

      id = R.id.text_owner;
      TextView textOwner = ViewBindings.findChildViewById(rootView, id);
      if (textOwner == null) {
        break missingId;
      }

      return new FragmentProfilePlaceholderBinding((LinearLayout) rootView, constraintLayout, ivBio,
          ivCompany, ivLocation, ivName, ivOwner, textBio, textCompany, textLocation, textName,
          textOwner);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
